name: Build and Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  test: 
    runs-on: ubuntu-latest
    container: node:18
  
    env:
      DB_DATABASE: test_db
      DB_USER: root
      DB_PASSWORD: root
      
    steps:
      - name: Set up MySQL
       services:
        mysql:
          image: mysql:5.7
          env:
            MYSQL_ROOT_PASSWORD: password
          ports:
          - 32574:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
    - name: Verify MySQL connection from host
      run: |
        sudo apt-get install -y mysql-client
        mysql --host 127.0.0.1 --port 32574 -uroot -ppassword -e "SHOW DATABASES"
      
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: node:14
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./apps/auth/Dockerfile
            name: auth
          - dockerfile: ./apps/gateway/Dockerfile
            image: ghcr.io/lansan-tech/gatewayservice
            name: gateway
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Build and Publish to Github Packages Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.APP_NEXT_PUBLIC_BACKEND_URL }}
        with:
          name: lansan-tech/${{ matrix.name }}/service
          registry: ghcr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: ${{ matrix.dockerfile }}
          buildargs: NEXT_PUBLIC_BACKEND_URL
          tags: latest
